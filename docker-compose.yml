# version: '3.8'

# services:
#   postgres:
#     image: postgres:15-alpine
#     container_name: articledb
#     environment:
#       POSTGRES_DB: articledb
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     networks:
#       - app-network

#   backend:
#     build: ./backend
#     container_name: backend
#     ports:
#       - "5000:5000"
#     environment:
#       PORT: 5000
#       DB_HOST: postgres
#       DB_PORT: 5432
#       DB_NAME: articledb
#       DB_USER: postgres
#       DB_PASSWORD: postgres
#       PYTHON_SERVICE_URL: http://python_service:8000
#     volumes:
#       - shared_pdfs:/app/pdfs
#     depends_on:
#       postgres:
#         condition: service_healthy
#     networks:
#       - app-network

#   python_service:
#     build: ./python_service
#     container_name: python_service
#     ports:
#       - "8000:8000"
#     environment:
#       PDF_OUTPUT_DIR: /app/pdfs
#       BACKEND_URL: http://backend:5000
#     volumes:
#       - shared_pdfs:/app/pdfs
#     depends_on:
#       - backend
#     networks:
#       - app-network

#   frontend:
#     build: ./frontend
#     container_name: frontend
#     ports:
#       - "3000:80"
#     depends_on:
#       - backend
#     networks:
#       - app-network

# volumes:
#   postgres_data:
#   shared_pdfs:

# networks:
#   app-network:
#     driver: bridge


version: '3.8'

services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      PORT: 5000
      PYTHON_SERVICE_URL: http://python_service:8000
    volumes:
      - shared_pdfs:/app/pdfs
    networks:
      - app-network

  python_service:
    build: ./python_service
    container_name: python_service
    ports:
      - "8000:8000"
    environment:
      PDF_OUTPUT_DIR: /app/pdfs
      BACKEND_URL: http://backend:5000
    volumes:
      - shared_pdfs:/app/pdfs
    depends_on:
      - backend
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  shared_pdfs:

networks:
  app-network:
    driver: bridge
